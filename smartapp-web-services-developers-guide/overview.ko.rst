.. _web_services_smartapps_overview:

웹 서비스 SmartApps 개요
===============================

*웹 서비스 SmartApps를 이용해 SmartThings와 통합하기*

이 가이드에서 아래와 같은 것을 알 수 있습니다:

- 웹 서비스 SmartApps가 어떻게 작동하는지에 대한 전체적인 디자인.
- 액세스를 보장하기 위해 취해진 보안 조치는 신뢰할 수있는 클라이언트와 사용자가 선택한 특정 장치에만 부여됩니다.
- 웹 서비스 SmartApp와 통합되는 외부 어플리케이션의 최종 사용자 흐름.

----

도입
------------

외부 시스템 API 접근 허용 방법을 설계할 때, 고객이 외부 API를 통해 자신의 계정에 접근하는 이유를 이해할 수 있도록 하고 그 접근 권한을 구체적으로 부여하면서, 개발자들이 필요로하는 유연성을 제공하고자 했습니다. 

따라서 외부 API 접근에 대한 구조와 사용자 환경을 다음과 같은 목표를 충족시키도록 설계했습니다:

-  기본 외부 API 접근을 인증하고 승인하기 위해 OAuth2와 같은 업계 모범 사례를 사용합니다.
-  최종 사용자는 (고객은) 특정한 장치에 접근할 수 있는 권한을 특별히 부여해야 합니다.
-  이해하기 쉬운 사용자 경험을 제공합니다.
-  이해하고 구현하기 쉬운 개발자 경험을 제공합니다.

----

개념
--------

SmartApps API가 어떻게 작동하는지에 대하여 이해해야 할 중요한 몇 가지 개념이 있습니다:

- 모든 SmartApps API는 OAuth2을 사용해 인증됩니다.
- SmartApps API에 대해 이야기할 때 SmartApp 자체로부터 노출되는 API를 언급합니다.
- SmartApps는 설치할 때 사용자가 특별히 허가한 장치에만 접근할 수 있는 특별한 보안 상황에서 실행됩니다. SmartApps API도 마찬가지입니다.

----

작동 방법
------------

API 접근을 위한 우리의 전반적인 방법을 사용하려면 최종 사용자가 다음의 두 단계로 API 접근을 인증하고 승인해야 합니다.

#. 사용자의 SmartThings 계정/위치에 SmartThings 웹 서비스 "SmartApp" 설치, 외부 시스템에 접근 권한이 부여되는 장치를 지정하는 특정 장치 기본 설정

#.일반적인 OAuth 로그인 흐름은 외부 시스템에 OAuth 접근 토큰을 부여합니다.

SmartThings과 통합하기 위해 외부 시스템에서 사용되는 API 엔드포인트를 노출하는 것이 SmartApp 자체임을 이해하는 것이 중요합니다.

이 접근 방법은 외부 시스템이 장치를 제어하기 전에 해당 장치에 명시적으로 접근 권한을 부여해야 한다는 것을 보장하기 위해 고안되었습니다.

OAuth-통합 앱 설치 과정
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

|Alt OAuth-Integrated App
Installation|

위의 도식은 API 연결과 사용 과정의 다음 표준 단계를 간략히 설명합니다:

#. 외부 시스템 사용자는 "SmartThings에 연결"하는 흐름을 시작하는 행동을 취합니다. 예를 들어 SmartThings "채널"을 추가하는 `IFTTT <http://www.ifttt.com>`__ 사용자가 있습니다.

#. 외부 서비스는 보통 SmartThings 로그인 페이지로 다시 전송합니다. 이 페이지에 대한 HTTP 요청은 로그인 페이지가 OAuth를 사용하는 로그인 요청으로 인식하는데 필요한 클라이언트 ID를 (자세한 내용은 아래 참조) 포함합니다.

#. 로그인 페이지가 뜨고 로그인에 성공하면, 방금 인증된 사용자가 해당 클라이언트 ID와 연결된 웹 서비스 SmartApp을 설치 및 구성할 수 있게 하는 후속 페이지가 뜹니다. 이 단계가 완료되면 인증 코드가 브라우저에 반환됩니다.

#. 보통 인증 코드는 외부 시스템에 제공되는데, 이는 접근 토큰을 요청하기 위해 (OAuth 클라이언트 ID 및 클라이언트 비밀번호와 함께) 사용됩니다. 이 경우 사용자 인증 정보 대신 이 인증 코드가 사용되며 단일 용도로만 유효합니다. 외부 시스템에 OAuth 접근 토큰이 있으면 이 토큰을 사용하여 API 요청을 할 수 있습니다.

#. 외부 시스템이 할 첫 번째 API 호출은 엔드포인트 서비스입니다. 이 서비스는 표준 URL에 존재하며, 외부 시스템에서 사용해야 하는 특정 URL을 반환하여 (이 특정 OAuth 접근 토큰의 경우) 모든 API 요청을 합니다.

#. 마지막으로, 외부 시스템은 웹 서비스를 제공하는 SmartApp에 대한 API를 호출하기 위해 지정된 엔드포인트 URL과 제공된 OAuth2 접근 토큰을 사용할 수 있습니다.

----

최종 사용자 여정
--------------------

웹 서비스 SmartApp을 구축하기 위한 특정 단계를 논의하기 전에, 최종 사용자 환경을 이해해야 합니다.

외부 시스템에서 연결 시작
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

첫 번째 단계는 외부 웹 어플리케이션에서 SmartThings 클라우드와의 연결을 시작하는 것입니다.
이는 각 웹 어플리케이션마다 다르지만, URL일 뿐입니다.

인증 및 승인
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

일반적인 OAuth 여정은 외부 시스템의 웹 사이트에서 시작된 OAuth2 인증 코드 흐름으로, 사용자는 SmartThings 웹 사이트로 다시 연결됩니다.
다음은 SmartThings 자격 증명을 입력하는 위치입니다:

.. figure:: ../img/smartapps/web-services/oauth-login.png

일단 SmartThings로 인증이 되면, 구체적으로 어플리케이션의 접근 권한을 부여하라는 메시지가 표시됩니다.

어플리케이션 구성
^^^^^^^^^^^^^^^^^^^^^^^^^

자동으로 설치될 웹 서비스 SmartApp을 구성하라는 메시지가 사용자에게 표시됩니다.
사용자는 OAuth 클라이언트 ID에 의해 자동으로 식별될 수 있으므로, 특정 SmartApp을 선택하지 않아도 됩니다.

어플리케이션 구성 과정의 첫 단계는 SmartApp이 설치될 위치를 확인하는 것입니다.

.. figure:: ../img/smartapps/web-services/location.png

두 번째 단계는 SmartApp에 의해 노출된 외부 웹 서비스를 통해 접근 가능한 장치를 정확하게 구성하는 것입니다.

다음은 IFTTT SmartApp 장치 선택 옵션입니다:

.. figure:: ../img/smartapps/web-services/preferences.png 

마지막으로, 사용자가 *승인* 을 클릭해 어플리케이션의 승인과 SmartApp 설치를 완료하면, 외부 시스템과 SmartThings 클라우드 간 연결이 완료됩니다.

사용자가 접근을 승인하면, 외부 시스템에 OAuth 인증 코드가 제공되며 이는 OAuth 접근 토큰을 요청하고 수신하는데 사용됩니다.
외부 시스템에 토큰이 있으면, SmartApp에서 제공하는 웹 서비스에 접근할 수 있습니다.

.. |Alt OAuth-Integrated App Installation| image:: ../img/smartapps/web-services/method-2.png
