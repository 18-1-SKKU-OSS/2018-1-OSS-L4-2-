ZigBee Device Handlers 만들기
===============================

.. note::

        만약 당신이 새로운 ZigBee 스위치나 전구를 SmartThings와 통합한다면, 아래의 :참고:`zigbee_device_form` 부분을 참조하여 어떻게 이러한 장치들을 코드 작성 없이 통합할 수 있는지 보세요.

----

명령어들
--------

SmartThings는 ZigBee 함께 일하는 것을 더 쉽게 하기 위해 라이브러리를 제공한다.
모든 Device Handler 에는 이 라이브러리에 주입된 이름이 ``zigbee`` 로 표시되어 있습니다.

이 라이브러리는 아래 예에서 사용됩니다.
자세한 내용은 :참고:`zigbee_ref` 를 참조하십시오.

ZigBee  기기와 SmartThings를 통합하는 데 사용할 수 있는 네가지 일반적인 ZigBee 명령이 있습니다.

읽기
^^^^

읽기는  다음과 같이 형식화된 디바이스의 최근 상태를 가져옵니다:

.. code-block:: groovy

    def refresh() {
        zigbee.readAttribute(0x0B04, 0x050B)
    }

이 예에서 장치 유형("CentraLiteSwitch"장치)
유형)에서 "refresh" 함수를 호출하고 있습니다.
현재 상태(유효 전력 인출)를 판독하기 위해 ``readAttribute()`` 메소드를 통해 ZigBee  읽기 속성 요청을 보내고 있다.
여기서 살펴볼 클러스터는 Electrical Measurement (0xB04), 특히 Active Power Attribute(0x50B)입니다.

+-------------------------------+-----------------------------+
| 요소                          | 설명                        |
+===============================+=============================+
|0x0B04                         | Cluster                     |
+-------------------------------+-----------------------------+
|0x050B                         | Attribute                   |
+-------------------------------+-----------------------------+

쓰기
^^^^^

쓰기는 ZigBee 장치의 특성을 다음과 같이 세팅하고, 다음과 같이 형시이 정해져 있습니다:

.. code-block:: groovy

    def configure() {
            zigbee.writeAttribute(8, 0x10, 0x21, 0x0014)
        }

이 예에서는("ZimbeeDimmer" Device Handler에서)조명이 완전히 켜지고 꺼지는 데 걸리는 시간을 설정하기 위해 특성에 쓰고 있습니다.
여기서는 Level Control Cluster (8)를 사용하여 전환 시간 및 해제(0x10)을 정의하는 속성에 씁니다.
사용 중인 값은 서명되지 않은 16비트 정수(0x21)로 포맷되며 페이 로드는 1/10/초 단위입니다.
이 경우 페이 로드({0014})는 2초로 변환됩니다.
페이 로드를 분해하면 0x0014의 16진수 값이 10진수 값인 20이 됩니다. 20*1/10초는 2초와 같습니다.

각 속성에는 특정 데이터 유형이 있습니다.
이 데이터 유형에 해당하는 값은 `ZigBee Cluster Library <http://www.zigbee.org/download/standards-zigbee-cluster-library/>`__ 표 2.16에서 확인할 수 있다.


.. note::
위 예의{0014}페이 로드는 16진수 문자열입니다. 페이 로드의 길이는 데이터 유형의 두배여야 합니다. 예를 들어, 데이터 유형이 16비트인 경우 페이 로드는 416진수여야 합니다.

+-------------------------------+-----------------------------+
| 요소                          | 설명                        |
+===============================+=============================+
|8                              |Cluster                      |
+-------------------------------+-----------------------------+
|0x10                           |Attribute Set                |
+-------------------------------+-----------------------------+
|0x21                           |Data Type                    |
+-------------------------------+-----------------------------+
|0x0014                         |Payload                      |
+-------------------------------+-----------------------------+

명령어
^^^^^^^

Commands는 ZigBee 장치로 명령을 보내고, 다릉과 같은 형식을 따릅니다:

.. code-block:: groovy

    def on() {
        zigbee.command(0x0006, 0x01)
    }

이 예에서는("ZipseeDimmer"장치 유형에서)장치를 켜기 위해 Zigbee명령을 보냅니다.
On/OffCluster(6)를 사용하여(1)을 켜는 명령을 전송합니다.
이 명령에는 페이 로드가 없으므로 전달된 매개 변수에서 제외합니다.

+-------------------------------+-----------------------------+
| Component                     | Description                 |
+===============================+=============================+
|0x0006                         |Cluster                      |
+-------------------------------+-----------------------------+
|0x01                           |Command                      |
+-------------------------------+-----------------------------+

Configure
^^^^^^^^^

보고 구성은 장치가 특성이 변경될 때 이를 알리도록 지시하며 다음과 같이 형식이 지정됩니다.

.. code-block:: groovy

    def configure() {
        configureReporting(0x0006, 0x0000, 0x10, 0, 600, null)
    }

이 예에서("CentraLiteSwitch"DeviceHandler사용), 바인딩 명령은 네트워크 ID를 사용하여 디바이스에 전송되며, 이 ID는``0x${device.deviceNetworkId}`` 을 사용합니다.
그런 다음 장치와 허브(1)의 소스 및 대상 끝점을 사용하여 On/Off클러스터(6)에 바인딩 하여 장치에서 이벤트를 가져옵니다.
메시지의 마지막 부분에는 장치가 콜백 메시지를 보낼 위치로 설정되는 허브의 Zi고 바이트 ID가 포함됩니다.
일부 디바이스는 이벤트 바인딩을 지원하지 않습니다.

+-------------------------------+-----------------------------+
| 요소                          | 설명                         |
+===============================+=============================+
|0x0006                         |Cluster                      |
+-------------------------------+-----------------------------+
|0x0000                         |Attribute ID                 |
+-------------------------------+-----------------------------+
|0x10                           |Boolean data type            |
+-------------------------------+-----------------------------+
|0                              |Minimum report time          |
+-------------------------------+-----------------------------+
|600                            |Maximum report time          |
+-------------------------------+-----------------------------+
|null                           |Reportable change (discrete) |
+-------------------------------+-----------------------------+

----

ZigBee 유틸리티
----------------

지그비와 함께 작업하기 위해서 당신은 당신의 장치로 앞뒤로 보내기 위한 적절한 값들을 찾기 위해서 지그비 클러스터 도서관을 광범위하게 사용할 필요가 있을 것이다.
이 문서를  `여기서 <http://www.zigbee.org/download/standards-zigbee-cluster-library/>`__ 다운로드 받을 수 있습니다.

:참고:`zigbee_ref` 에 포함된 Zingee유틸리티 클래스도 있습니다.

----

가장 좋은 연습방법
--------------

-'raw...'명령은 더 이상 사용되지 않습니다. 대신에 지그비 라이브러리에서 문서화된 방법을 사용하세요. 만일 당신이 'raw' 명령의 사용을 요구하는 어떤 것을 할 필요가 있다면 우리에게 알려 주세요. 그리고 우리는 그것을 지그비 도서관에 추가하는 것을 고려할 것입니다.
-명령어에 ``sendEvent()`` 를 사용하지 마십시오. 이벤트 전송은 ``parse`` 방법으로 처리해야 한다.

----

.. _zigbee_device_form:

지그비 장치 양식 사용
----------------------------

새로운 지크의 스위치 또는 전구를 SmartThings와 통합하기 위해 *From ZigBee Device Form* 을 사용할 수 있습니다.

.. image:: ../img/device-types/zigbee-form.png

뭘 할까요?
^^^^^^^^^^^^

양식에 장치에 대한 지그/빅 정보를 입력하면 기존 장치 처리기가 장치의 지문으로 업데이트됩니다.

다음 경우에 사용하세요
^^^^^^^^^

-사용자는 기기 제조 업체이거나, 그렇지 않은 경우 양식에 요청된 ZigBee 장치 정보에 액세스 할 수 있습니다.
-장치는 다음 중 하나로 설명하는 것이 가장 좋습니다.

    - ZigBee Switch
    - ZigBee Switch with Power
    - ZigBee Dimmer/Bulb
    - ZigBee Dimmer/Bulb with Power
    - ZigBee Color Temperature Bulb

어떻게 쓸까요
^^^^^^^^^^

필요한 필드에 장치에 대한 정보를 입력하고 *Create.* 을 클릭하면 됩니다.

그러면 IDE편집기에서 업데이트된 장치 처리기 코드가 표시됩니다.
그런 다음 장치가 SmartThings및 기능과 일치하는지 테스트한 다음 게시 요청으로 업데이트할 수 있습니다.
