:Authors:
	Kim Kyung Min
	(Sungkyunkwan Univ. College of Software)
:Version: 1.2 of 2018/05/28

=======
개요
=======

SmartThings는 개발자들이 사용중인 기기의 세부적인 사항들을 신경쓰지 않는 애플리케이션을 개발할 수 있도록 기기의 고유한 기능과 속성들로부터 독자적인 추상화를 제공합니다. 예를 들어 이 아키텍쳐에는 무선으로 제어가 가능한 많은 "스위치"들이 있습니다. "스위치"란 켜지거나 꺼질수 있는 모든 기기들입니다.

SmartApp는 기기의 가상화된 표현과 상호 작용하면, 기기의 기능을 바탕으로 어떤 특정 작업을 지원하는지 알게 됩니다. "스위치" 기능을 가지고 있는 기기는 반드시 "켜기" 그리고 "끄기" 작업을 모두 지원해야 합니다. 여기서, 모든 스위치들은 동일하며, 실제로 어떤 종류의 스위치가 포함되어 있는지는 SmartApp이 신경쓰지 않습니다.

기기의 가상화된 표현은 Device Handler라고 불립니다.

주의

이러한 추상화는 SmartThings 플랫폼의 성공적인 작동과 유연성에 있어 핵심 사항입니다. 구조적으로, device handler는 일반적인 기능과 기기와 실제로 통신하기 위해 사용되는 기기 혹은 프로토콜이 특정된 인터페이스 간의 다리 역할을 해줍니다. 

아래 나오는 그림은 device handler가 SmartThings 구조에서 어디에 위치하는지를 표현합니다.

.. image:: ../img/device-types/smartthings-architecture.png

위의 예시에서, Device Handler("스위치" 기능을 구현하는)는 기기로부터 프로토콜이 명시된 상태 메세지를 받아 파싱하고, 그 메세지들을 표준화된 "events"로 바꾸는 역할을 합니다. 또한, "on" 이나 "off" 같은 표준화된 명령들을 받아 그것들이 기기로 보내져서 원하는 행동을 할 수 있도록 프로토콜이 명시된 명령으로 바꾸기도 합니다.

예를 들어,  Z-wave가 호환되는 on-off 스위치에서, 기기가 "on"이나 "off" 상태를 보고하기 위해 사용하는 수신 상태 메세지는 아래와 같습니다:

========= ============================
기기 명령 프로토콜-명시 명령 메시지
========= ============================
켜기       command: 2003, payload: FF
끄기       command: 2003, payload: 00
========= ============================

반면에 해당 장치의 SmartThings 플랫폼에 보고되는 장치의 상태는 그저 "on" 이나 "off"입니다.

비슷하게,
